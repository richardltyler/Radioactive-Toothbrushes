{"version":3,"sources":["components/Header/home.png","components/Header/Header.js","components/Error/Error.js","components/Cards/Cards.js","components/Movies/Movies.js","api-calls.js","components/Film/Film.js","components/App/App.js","index.js"],"names":["Header","to","className","src","homeButton","alt","Error","Card","id","poster","title","Movies","movieCards","movies","map","movie","poster_path","apiCalls","getAllMovies","fetch","getOneMovie","then","response","json","Film","checkForError","film","error","setState","isLoading","currentMovie","getGenres","state","genres","join","formatMoney","money","name","charAt","toUpperCase","slice","getNumberAmount","amount","number","numLength","parseInt","toString","length","newNum","parseFloat","toFixed","formatDate","dateWithoutDay","Date","release_date","toDateString","split","formatRating","rating","average_rating","formattedRating","this","props","catch","tagline","runtime","aria-label","overview","budget","revenue","Component","App","isResponseOk","ok","films","exact","path","render","myMovieID","match","params","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5070c235.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/home.e53ae88a.png\";","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport homeButton from './home.png';\nimport './Header.css';\n\nconst Header = () => {\n  return (\n    <header>\n      <h1>Radioactive Toothbrushes</h1>\n      <NavLink to='/'>\n        <img\n          className='home-icon'\n          src={homeButton}\n          alt='home'\n          />\n      </NavLink>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport './Error.css';\n\nconst Error = () => {\n    return (\n      <div className='error-message'>\n        <img src='https://media.giphy.com/media/zWIZO0saJg4g/giphy.gif' alt='trying to squeeze toothpaste on a toothbrush and making a mess instead' />\n        <h2>We're having some technical difficulties.</h2>\n      </div>\n    );\n};\n\nexport default Error;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport './Cards.css';\n\nconst Card = ({id, poster, title}) => {\n  return (\n    <NavLink className='nav' to={`/film/${id}`}>\n      <article className='card' id={title}>\n        <img\n          src={poster}\n          alt={title}\n          className='card-poster'\n        />\n        <h2 className='card-title'>{title}</h2>\n      </article>\n    </NavLink>\n  );\n};\n\nexport default Card;\n\nCard.propTypes = {\n  id: PropTypes.number.isRequired,\n  poster: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Movies.css';\nimport Card from '../Cards/Cards';\n\nconst Movies = ({ movies }) => {\n\n  const movieCards = movies.map(movie => {\n    return (\n      <Card\n        key={movie.id}\n        id={movie.id}\n        poster={movie.poster_path}\n        title={movie.title}\n      />\n    );\n  });\n\n  return (\n    <section className='movies-container'>\n      {movieCards}\n    </section>\n  );\n};\n\nexport default Movies;\n\nMovies.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","const apiCalls = {\n  getAllMovies() {\n    return fetch('https://rancid-tomatillos.herokuapp.com/api/v2/movies/')\n  },\n\n  getOneMovie(id) {\n    return (\n      fetch(`https://rancid-tomatillos.herokuapp.com/api/v2/movies/${id}`)\n        .then(response => response.json())\n    );\n  }\n};\n\nexport default apiCalls;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport apiCalls from './../../api-calls';\nimport './Film.css';\n\nclass Film extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currentMovie: {},\n      isLoading: true,\n      error: false\n    };\n  }\n\n  componentDidMount() {\n    apiCalls.getOneMovie(this.props.id)\n      .then(film => this.checkForError(film))\n      .catch(() => this.setState({isLoading: false, error: true }));\n  }\n\n  checkForError = film => {\n    if(film.error) {\n      this.setState({error: true, isLoading: false});\n    } else {\n      this.setState({currentMovie: film.movie, isLoading: false});\n    }\n  }\n\n  getGenres = () => {\n    return <h4 className='genre-display'>{this.state.currentMovie.genres.join(', ')}</h4>;\n  }\n\n  formatMoney = money => {\n    const name = money.charAt(0).toUpperCase() + money.slice(1);\n\n    return (\n      <>\n        <h4>{`${name}:`}</h4>\n        <h5>{`${this.getNumberAmount(money)}`}</h5>\n      </>\n    );\n  }\n\n  getNumberAmount = amount => {\n    const number = this.state.currentMovie[amount];\n    const numLength = parseInt(number).toString().length;\n\n    if(numLength > 3 && numLength < 7) {\n      const newNum = parseFloat((number/1000).toFixed(1));\n      return `$${newNum}k`;\n\n    } else if (numLength > 6 && numLength < 10) {\n      const newNum = parseFloat((number/1000000).toFixed(1));\n      return `$${newNum}mil`;\n\n    } else if (numLength > 9) {\n      const newNum = parseFloat((number/1000000000).toFixed(1));\n      return `$${newNum}bil`;\n\n    } else {\n      return `$${parseInt(number)}`;\n    }\n  }\n\n  formatDate = () => {\n    const newDate = new Date(this.state.currentMovie.release_date).toDateString();\n    const dateWithoutDay = newDate.split(' ').slice(1);\n\n    return <h4>{dateWithoutDay.join(' ')}</h4>;\n  }\n\n  formatRating = () => {\n    const rating = this.state.currentMovie.average_rating;\n    const formattedRating = parseFloat(rating.toFixed(1));\n\n    return <h3 className='rating'>{`ðŸª¥${formattedRating}/10`}</h3>;\n  }\n\n  render() {\n    return (\n\n      <>\n        {this.state.isLoading && <h2 className='message'>Looking for your movie...</h2>}\n\n        {this.state.error && <Redirect to='/error' />}\n\n        {!this.state.isLoading && !this.state.error &&\n          <article className='single-film'>\n            <section className='film-details'>\n              <div className='film-title-container'>\n                <h2 className='title'>{this.state.currentMovie.title}</h2>\n                {this.state.currentMovie.average_rating && this.formatRating()}\n              </div>\n              <h3>{this.state.currentMovie.tagline}</h3>\n              <div className='info-container'>\n                <h4>{`${this.state.currentMovie.runtime} min`}</h4>\n                {this.state.currentMovie.genres && this.getGenres()}\n                {this.formatDate()}\n              </div>\n            </section>\n            <img src={this.state.currentMovie.poster_path} alt={this.state.currentMovie.title} />\n            <section className='overview'>\n              <article className='summary' aria-label='summary'>\n                <h3 className='summary-headline'>Summary:</h3>\n                <p>{this.state.currentMovie.overview}</p>\n              </article>\n              <div className='money-container'>\n                {this.state.currentMovie.budget > 0 && this.formatMoney('budget')}\n                {this.state.currentMovie.revenue > 0 && this.formatMoney('revenue')}\n              </div>\n            </section>\n          </article>\n        }\n      </>\n    );\n  }\n}\n\nexport default Film;\n","import React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport Header from '../Header/Header';\nimport Error from '../Error/Error';\nimport Movies from '../Movies/Movies';\nimport Film from '../Film/Film';\nimport apiCalls from '../../api-calls.js';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      movies: [],\n      isLoading: true,\n      error: false\n    };\n  }\n\n  componentDidMount() {\n    apiCalls.getAllMovies()\n      .then(response => this.isResponseOk(response))\n      .then(films => this.setState({movies: films.movies, isLoading: false}))\n      .catch(() => this.setState({isLoading: false, error: true}));\n  }\n\n  isResponseOk = (response) => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      this.setState({error: true, isLoading: false});\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <div className=\"App\">\n          {this.state.isLoading && <h2 className='message'>Please wait...</h2>}\n\n          <Route\n            exact\n            path='/'\n            render={() => {\n                if(!this.state.error){\n                  return <Movies movies={this.state.movies} />\n                } else {\n                  return <Redirect to='/error' />\n                }\n              }\n            }\n          />\n\n          <Route\n            exact\n            path='/film/:id'\n            render={( { match } ) => {\n              const myMovieID = match.params.id;\n              return <Film id={myMovieID}/>\n            } }\n          />\n\n          <Route\n            exact\n            path='/error'\n            render={() => <Error />}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}